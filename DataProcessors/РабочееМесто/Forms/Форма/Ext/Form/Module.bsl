
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьОтборДинамическогоСпискаПродавец(Справочники.Продавцы.ПустаяСсылка()); 
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект"); 
	СКД = ОбъектОбработки.ПолучитьМакет("МакетОтборПродавцов"); // коммент
	ОпределитьКомпоновщик(КомпоновщикНастроекКомпоновкиДанныхПродавцы, ОбъектОбработки, СКД);
	
	СКД = ОбъектОбработки.ПолучитьМакет("МакетОтборМагазинов");
	ОпределитьКомпоновщик(КомпоновщикНастроекКомпоновкиДанныхМагазины, ОбъектОбработки, СКД);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборДинамическогоСпискаПродавец(Значение)
	ПраваПродавцовНаМагазины.Отбор.Элементы.Очистить();
	НовыйЭлементОтбора = ПраваПродавцовНаМагазины.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Продавец");
	НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НовыйЭлементОтбора.Использование = Истина;
	НовыйЭлементОтбора.ПравоеЗначение = Значение;
КонецПроцедуры

&НаСервере
Процедура ОпределитьКомпоновщик(КомпоновщикНастроекКомпоновкиДанных, ОбъектОбработки, СКД)
	
	Адрес = ПоместитьВоВременноеХранилище(СКД, УникальныйИдентификатор);
	
	Источник = Новый ИсточникДоступныхНастроекКомпоновкиДанных(Адрес);
	
	КомпоновщикНастроекКомпоновкиДанных.Инициализировать(Источник);
	КомпоновщикНастроекКомпоновкиДанных.ЗагрузитьНастройки(СКД.НастройкиПоУмолчанию);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	
	СоответствиеМагазинов.Очистить();
	
	МассивРеквизитовКУдалению = Новый Массив;
	МассивЭлементовКУдалению = Новый Массив;
	
	ПродавцыМагазины.Очистить();
	
	Для Каждого РеквизитКУдалению Из Элементы.ПродавцыМагазины.ПодчиненныеЭлементы Цикл
		ИмяРеквизитаКУдалению = РеквизитКУдалению.ПутьКДанным;
		Если ИмяРеквизитаКУдалению = "ПродавцыМагазины.Продавец" Тогда
			Продолжить;
		КонецЕсли;
		МассивРеквизитовКУдалению.Добавить(ИмяРеквизитаКУдалению);
		МассивЭлементовКУдалению.Добавить(РеквизитКУдалению);
	КонецЦикла;
	
	Для Каждого РеквизитКУдалению Из МассивЭлементовКУдалению Цикл
		Элементы.Удалить(РеквизитКУдалению);
	КонецЦикла;
	
	ИзменитьРеквизиты(,МассивРеквизитовКУдалению);
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	СКД = ОбъектОбработки.ПолучитьМакет("МакетОтборПродавцов");
	
	Настройки = КомпоновщикНастроекКомпоновкиДанныхПродавцы.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, Настройки,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаДанныхПродавцы = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаДанныхПродавцы);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	СКД = ОбъектОбработки.ПолучитьМакет("МакетОтборМагазинов");
	
	Настройки = КомпоновщикНастроекКомпоновкиДанныхМагазины.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, Настройки,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаДанныхМагазины = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаДанныхМагазины);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Строка"));
	КС = Новый КвалификаторыСтроки(1);
	
	ОписаниеТиповМагазины = Новый ОписаниеТипов(МассивТипов,,,,КС);
	
	МассивРеквизитов = Новый Массив;
	Для Каждого СтрокаМагазин Из ТаблицаДанныхМагазины Цикл
		
		ИмяРеквизита = ПолучитьКолонкуМагазина(СтрокаМагазин.Ссылка);
		
		МассивРеквизитов.Добавить(Новый РеквизитФормы(ИмяРеквизита, ОписаниеТиповМагазины,"ПродавцыМагазины", СтрокаМагазин.Наименование));
	КонецЦикла;
	ИзменитьРеквизиты(МассивРеквизитов);
	
	Для Каждого Колонка Из МассивРеквизитов Цикл
		НовыйЭлемент = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), Элементы.ПродавцыМагазины);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "ПродавцыМагазины." + Колонка.Имя;
		НовыйЭлемент.Ширина = 10;
		НовыйЭлемент.ТолькоПросмотр = Истина;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПраваПродавцовНаМагазины.Продавец КАК Продавец,
	|	ПраваПродавцовНаМагазины.Магазин КАК Магазин
	|ИЗ
	|	РегистрСведений.ПраваПродавцовНаМагазины КАК ПраваПродавцовНаМагазины
	|ГДЕ
	|	ПраваПродавцовНаМагазины.Продавец В(&Продавцы)
	|	И ПраваПродавцовНаМагазины.Магазин В(&Магазины)
	|ИТОГИ ПО
	|	Продавец";
	
	Запрос.УстановитьПараметр("Продавцы", ТаблицаДанныхПродавцы.ВыгрузитьКолонку("Ссылка"));
	
	ТаблицаМагазиныПараметр = ТаблицаДанныхМагазины.ВыгрузитьКолонку("Ссылка");
	ТаблицаМагазиныПараметр.Добавить(Справочники.Магазины.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("Магазины", ТаблицаМагазиныПараметр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПродавец = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого СтрокаТаблицы Из ТаблицаДанныхПродавцы Цикл
		НоваяСтрока = ПродавцыМагазины.Добавить();
		НоваяСтрока.Продавец = СтрокаТаблицы.Ссылка;
		
		СтруктураПоиска = Новый Структура("Продавец", СтрокаТаблицы.Ссылка);
		
		Если ВыборкаПродавец.НайтиСледующий(СтруктураПоиска) Тогда
			ВыборкаМагазины = ВыборкаПродавец.Выбрать();
			
			Пока ВыборкаМагазины.Следующий() Цикл
				
				УстановитьЗначениеВКолонке(ВыборкаМагазины.Магазин, НоваяСтрока);

			КонецЦикла;
			
			ВыборкаПродавец.Сбросить();
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
КонецПроцедуры

&НаСервере
Функция ПолучитьКолонкуМагазина(Магазин, ДобавлятьНовую = Истина)
	
	Отбор = Новый Структура("Магазин", Магазин);
	НайденныеСтроки = СоответствиеМагазинов.НайтиСтроки(Отбор);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		Возврат НайденныеСтроки[0].ИмяКолонки;
	КонецЕсли;
	
	Если ДобавлятьНовую Тогда
		
		НоваяСтрокаСоответсвия = СоответствиеМагазинов.Добавить();
		НоваяСтрокаСоответсвия.Магазин = Магазин;
		
		ИмяРеквизита = СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-","_");
		НоваяСтрокаСоответсвия.ИмяКолонки = СтрШаблон("ПродавцыМагазины%1", ИмяРеквизита);
		
		Возврат НоваяСтрокаСоответсвия.ИмяКолонки;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ПолучитьМагазин(КолонкаМагазина)
	
	Отбор = Новый Структура("ИмяКолонки", КолонкаМагазина);
	НайденныеСтроки = СоответствиеМагазинов.НайтиСтроки(Отбор);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		Возврат НайденныеСтроки[0].Магазин;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ПродавцыМагазиныПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ПродавцыМагазины.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьОтборДинамическогоСпискаПродавец(ТекущиеДанные.Продавец);
КонецПроцедуры

&НаКлиенте
Процедура ПродавцыМагазиныВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ПродавцыМагазиныПродавец" Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаВыбранная = ПродавцыМагазины.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ЗначениеВКолонке = СтрокаВыбранная[Поле.Имя];
	
	Если ЗначениеВКолонке = "" Тогда
		КлючЗаписи = СоздатьЗаписьВРегистре(Поле.Имя, СтрокаВыбранная.Продавец);
		
		Если КлючЗаписи = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ОповеститьОбИзменении(КлючЗаписи);
	ИначеЕсли ЗначениеВКолонке = "X" Тогда
		
		КлючЗаписи = УдалитьЗаписьИзРегистра(Поле.Имя, СтрокаВыбранная.Продавец);
		
		Если КлючЗаписи = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ОповеститьОбИзменении(КлючЗаписи);
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Функция СоздатьЗаписьВРегистре(ИмяКолонки, Продавец)
	
	Магазин = ПолучитьМагазин(ИмяКолонки);
	
	Если Магазин = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.ПраваПродавцовНаМагазины.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Магазин = Магазин;
	МенеджерЗаписи.Продавец = Продавец;
	МенеджерЗаписи.Записать();
	
	СтруктураИзмерений = Новый Структура("Продавец, Магазин", Продавец, Магазин);
	КлючЗаписи = РегистрыСведений.ПраваПродавцовНаМагазины.СоздатьКлючЗаписи(СтруктураИзмерений);
	
	Возврат КлючЗаписи;
	
КонецФункции


&НаСервере
Функция УдалитьЗаписьИзРегистра(ИмяКолонки, Продавец)
	
	Магазин = ПолучитьМагазин(ИмяКолонки);
	
	НаборЗаписей = РегистрыСведений.ПраваПродавцовНаМагазины.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Продавец.Установить(Продавец);
	НаборЗаписей.Прочитать();
	
	Для Каждого СтрокаНабора Из НаборЗаписей Цикл
		Если СтрокаНабора.Магазин = Магазин Тогда
			НаборЗаписей.Удалить(СтрокаНабора);
			НаборЗаписей.Записать(Истина);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураИзмерений = Новый Структура("Продавец, Магазин", Продавец, Магазин);
	КлючЗаписи = РегистрыСведений.ПраваПродавцовНаМагазины.СоздатьКлючЗаписи(СтруктураИзмерений);
	
	Возврат КлючЗаписи;
	
КонецФункции

&НаСервере
Процедура ПраваПродавцовНаМагазиныПриИзмененииНаСервере(ИдентификаторСтроки)
	
	Схема = Элементы.ПраваПродавцовНаМагазины.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.ПраваПродавцовНаМагазины.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема,Настройки,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ТекущаяСтрокаПродавцыМагазины = ПродавцыМагазины.НайтиПоИдентификатору(ИдентификаторСтроки);
	УстановитьВсеКолонкиСтроки(ТекущаяСтрокаПродавцыМагазины, "");
	
	Для Каждого КолонкаКИзменению Из Результат Цикл
		
		УстановитьЗначениеВКолонке(КолонкаКИзменению.Магазин, ТекущаяСтрокаПродавцыМагазины);
	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПраваПродавцовНаМагазиныПриИзменении(Элемент)
	
	ТекущаяСтрокаПродавцыМагазины = Элементы.ПродавцыМагазины.ТекущиеДанные.ПолучитьИдентификатор();
	
	ПраваПродавцовНаМагазиныПриИзмененииНаСервере(ТекущаяСтрокаПродавцыМагазины);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВсеКолонкиСтроки(СтрокаТаблицы, Значение)
	
	ВсеРеквизитыТаблицы = ПолучитьРеквизиты("ПродавцыМагазины");
	Для Каждого ЭлементРеквизит Из ВсеРеквизитыТаблицы Цикл
		Если ЭлементРеквизит.Имя = "Продавец" Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицы[ЭлементРеквизит.Имя] = Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначениеВКолонке(Магазин, СтрокаКИзменению)
	
	Если Магазин = Справочники.Магазины.ПустаяСсылка() Тогда
		
		УстановитьВсеКолонкиСтроки(СтрокаКИзменению, "X");
		
	Иначе
		
		ИмяКолонки = ПолучитьКолонкуМагазина(Магазин, Ложь);
		Если ИмяКолонки <> Неопределено Тогда
			СтрокаКИзменению[ИмяКолонки] = "X";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры






